---
import { details, images, buttons  } from '../data/DescriptionCelaktion.js';
---

<div class="relative overflow-hidden bg-gray-900">
    <div
        class="relative isolate overflow-hiddenpt-16 pb-80 max-sm:pt-25 sm:pt-30 sm:pb-10 lg:pt-40 lg:pb-48"
    >
        <svg
            viewBox="0 0 1024 1024"
            class="absolute top-1/2 left-1/2 -z-10 size-[64rem] -translate-y-1/2 [mask-image:radial-gradient(closest-side,white,transparent)] sm:left-full sm:-ml-80 lg:left-1/2 lg:ml-0 lg:-translate-x-1/2 lg:translate-y-0"
            aria-hidden="true"
        >
            <circle
                cx="512"
                cy="512"
                r="512"
                fill="url(#759c1415-0410-454c-8f7c-9a820de03641)"
                fill-opacity="0.7"></circle>
            <defs>
                <radialGradient id="759c1415-0410-454c-8f7c-9a820de03641">
                    <stop stop-color="#F2A30F"></stop>
                    <stop offset="1" stop-color="#F27405"></stop>
                </radialGradient>
            </defs>
        </svg>
        <div class="relative mx-auto max-w-7xl px-4 sm:static sm:px-6 lg:px-8">
            <div class="sm:px-2 prose invert sm:max-w-sm">
                <h1 class="text-5xl font-semibold tracking-tight text-balanc sm:text-7xl">
                    ¿QUE ES CELAKTION?
                </h1>
                <p>
                    CELAKTION es un desafío de aventura extrema con un propósito
                    solidario: recaudar fondos para actividades comunitarias que
                    beneficien a la niñez y promover el turismo sostenible en
                    Honduras
                </p>
                <p>
                    En esta expedición, voluntarios y empresas se unirán en una
                    causa que va más allá del reto físico: un desafío que cambia
                    vidas.
                </p>
                <ul class="list-disc list-inside">
                    {
                        details.map((item, i) => (
                            <li class="flex gap-x-3 lg:text-nowrap" data-key={i}>
                                <svg
                                    class="h-6 w-5 flex-none text-orange-900"
                                    viewBox="0 0 20 20"
                                    fill="currentColor"
                                >
                                    <path
                                        fill-rule="evenodd"
                                        d="M16.704 4.153a.75.75 0 0 1 .143 1.052l-8 10.5a.75.75 0 0 1-1.127.075l-4.5-4.5a.75.75 0 0 1 1.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 0 1 1.05-.143Z"
                                        clip-rule="evenodd"
                                    />
                                </svg>
                                <strong>{item.label}:</strong> <span set:html={item.value}></span>
                            </li>
                        ))
                    }
                </ul>
                </div>
            <div>
                <div class="mt-10 sm:px-2">
                    <!-- Decorative image grid -->
                    <div
                        aria-hidden="true"
                        class="pointer-events-none lg:absolute lg:inset-y-0 lg:mx-auto lg:w-full lg:max-w-7xl"
                    >
                        <div
                            class="absolute transform sm:top-0 sm:left-1/2 sm:translate-x-8 lg:top-1/2 lg:left-1/2 lg:-translate-y-1/2 lg:translate-x-8"
                        >
                        <div class="flex items-center space-x-6 lg:space-x-8 max-sm:mt-10 sm:mt-10 md:mt-0">
                            {images.map((column) => (
                                <div class="grid shrink-0 grid-cols-1 gap-y-6 lg:gap-y-8">
                                    {column.map((img) => (
                                        <div class={img.class}>
                                            <img src={img.src} alt={img.alt} class="size-full object-cover" loading="lazy" />
                                        </div>
                                    ))}
                                </div>
                            ))}
                        </div>
                        </div>
                    </div>
                    <div
                        class="flex flex-col sm:flex-row gap-4 mt-8"
                    >
                    {buttons.map((button) => (
                        <div class="sm:text-center">
                            <a
                                href={button.link}
                                class="inline-block rounded-md bg-yellow-600 px-6 py-3 text-sm font-semibold text-white shadow-md transition-all duration-200 hover:bg-yellow-700 hover:scale-105 hover:shadow-lg"
                            >
                                {button.text}
                            </a>
                            <p class="text-xs italic leading-tight mt-1 animate-fade-in" set:html={button.description}></p>
                        </div>
                    ))}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
